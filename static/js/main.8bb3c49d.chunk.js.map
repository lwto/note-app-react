{"version":3,"sources":["components/Main.js","components/Sidebar.js","App.js","index.js"],"names":["Main","_ref","currentNote","updateNote","editNote","key","value","_objectSpread2","Object","objectSpread","defineProperty","Date","now","react_default","a","createElement","className","type","name","id","autoFocus","title","onChange","e","target","placeholder","body","react_markdown","Sidebar","notes","addNote","deleteNote","activeNote","setActiveNote","noteElement","sort","b","lastModified","map","note","concat","onClick","substr","toLocaleDateString","hour","minute","App","_React$useState","React","useState","JSON","parse","localStorage","getItem","_React$useState2","slicedToArray","setNotes","_React$useState3","_React$useState4","useEffect","setItem","stringify","components_Sidebar","newNote","uuid","toConsumableArray","idToDelete","filter","components_Main","find","updatedNote","updatedNotesArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8bb3c49d.chunk.js","sourcesContent":["import React from 'react'\nimport ReactMarkdown from 'react-markdown'\n\nfunction Main({currentNote, updateNote}) {\n const editNote = (key, value)=>{\n  updateNote({\n    ...currentNote,\n    [key]:value,\n    lastModified: Date.now()\n  })\n }\n\n if(!currentNote) return <h2 className='no-note'>No Active Note</h2>\n\n else\n\n  return (\n    <div className='main'>\n      <div className=\"edit\">\n        <input \n          type=\"text\" \n          name='title'\n          id='title'\n          autoFocus\n          value={currentNote.title}\n          onChange={(e)=>editNote('title', e.target.value)}\n        />\n        <textarea \n          name='body'\n          id='body'\n          placeholder='Write your note here...'\n          value={currentNote.body}\n          onChange={(e)=>editNote('body', e.target.value)}\n        />\n      </div>\n      <div className=\"preview\">\n        <h1>{currentNote.title}</h1>\n        <ReactMarkdown>{currentNote.body}</ReactMarkdown>\n      </div>\n    </div>\n  )\n}\n\nexport default Main","import React from 'react'\n\nfunction Sidebar({notes, addNote ,deleteNote, activeNote, setActiveNote}) {\n  const sortedNotes = notes.sort((a,b)=> b.lastModified - a.lastModified)\n\n  const noteElement = sortedNotes.map(note => (\n    <div \n      className={`note ${note.id === activeNote && \"active\"}`} \n      key={note.id} \n      onClick={()=>setActiveNote(note.id)}\n    >\n\n      <div className=\"note-title\">\n        <strong>{note.title}</strong>\n        <button onClick={() => deleteNote(note.id)}>Delete</button>\n      </div> \n\n      <p className='note-preview'>{note.body && note.body.substr(0, 100)+ \"...\"}</p>\n      <small>\n        Last Modified {new Date(note.lastModified).toLocaleDateString(\"en-GB\",{\n        hour:\"2-digit\",\n        minute:\"2-digit\"\n        })}\n      </small>  \n\n    </div>\n  )\n  )\n\n  return (\n    <div className='sidebar'>\n      <div className=\"header\">\n        <h2>Notes</h2>\n        <button onClick={addNote}>Add</button>\n      </div>\n      <div className=\"notes\">\n        {noteElement}\n      </div>\n    </div>\n  )\n}\n\nexport default Sidebar","import React from 'react';\nimport Main from './components/Main'\nimport Sidebar from './components/Sidebar'\nimport uuid from 'react-uuid'\n\nexport default function App(){\n\n  const [notes,setNotes] = React.useState(\n    () => JSON.parse(localStorage.getItem(\"notes\")) || []\n  );\n\n  const[activeNote, setActiveNote]= React.useState(false)\n\n  const addNote = () =>{\n    const newNote = {\n      id:uuid(),\n      title:\"Untitled Note\",\n      body:\"\",\n      lastModified:Date.now()\n    }\n    setNotes([newNote,...notes])\n  }\n\n  const deleteNote = (idToDelete) => {\n    setNotes(notes.filter((note) => note.id !== idToDelete))\n  }\n\n  const currentNote = ()=>{\n    return notes.find(note => note.id === activeNote)\n  }\n\n  const updateNote = (updatedNote)=>{\n    const updatedNotesArray = notes.map(note => {\n      if(note.id === activeNote){\n        return updatedNote \n      }\n      return note\n    })\n    setNotes(updatedNotesArray)\n  }\n\n\n  React.useEffect(() => {\n        localStorage.setItem(\"notes\", JSON.stringify(notes))\n    }, [notes])\n    \n\n  return(\n    <div className='container'>\n      <Sidebar \n        notes={notes} \n        addNote={addNote} \n        deleteNote={deleteNote} \n        activeNote={activeNote}\n        setActiveNote={setActiveNote}\n      />\n      <Main \n        currentNote={currentNote()} \n        updateNote={updateNote} \n\n      />\n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render( < App / > , document.getElementById('root'))"],"sourceRoot":""}